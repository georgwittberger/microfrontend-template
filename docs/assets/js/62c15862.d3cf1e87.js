"use strict";(self.webpackChunkmicrofrontend_template_docs=self.webpackChunkmicrofrontend_template_docs||[]).push([[429],{9613:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>u});var o=n(9496);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),p=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=p(e.components);return o.createElement(l.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},h=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),d=p(n),h=r,u=d["".concat(l,".").concat(h)]||d[h]||m[h]||i;return n?o.createElement(u,s(s({ref:t},c),{},{components:n})):o.createElement(u,s({ref:t},c))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,s=new Array(i);s[0]=h;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a[d]="string"==typeof e?e:r,s[1]=a;for(var p=2;p<i;p++)s[p]=n[p];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}h.displayName="MDXCreateElement"},618:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>a,toc:()=>p});var o=n(7366),r=(n(9496),n(9613));const i={description:"Handling stylesheets of microfrontends",sidebar_position:8},s="Stylesheets",a={unversionedId:"concepts/stylesheets",id:"concepts/stylesheets",title:"Stylesheets",description:"Handling stylesheets of microfrontends",source:"@site/docs/concepts/stylesheets.md",sourceDirName:"concepts",slug:"/concepts/stylesheets",permalink:"/microfrontend-template/concepts/stylesheets",draft:!1,tags:[],version:"current",sidebarPosition:8,frontMatter:{description:"Handling stylesheets of microfrontends",sidebar_position:8},sidebar:"sidebar",previous:{title:"Caching Modules",permalink:"/microfrontend-template/concepts/caching-modules"}},l={},p=[{value:"Motivation",id:"motivation",level:2},{value:"Approaches",id:"approaches",level:2},{value:"Inline Stylesheets",id:"inline-stylesheets",level:3},{value:"External Stylesheets",id:"external-stylesheets",level:3},{value:"CSS in JavaScript",id:"css-in-javascript",level:3}],c={toc:p},d="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"stylesheets"},"Stylesheets"),(0,r.kt)("h2",{id:"motivation"},"Motivation"),(0,r.kt)("p",null,"Microfrontends should bring their own stylesheets instead of relying on styles to be present in the host application. This ensures that microfrontends can evolve independently from their host applications."),(0,r.kt)("h2",{id:"approaches"},"Approaches"),(0,r.kt)("h3",{id:"inline-stylesheets"},"Inline Stylesheets"),(0,r.kt)("p",null,"In this approach the microfrontend inserts ",(0,r.kt)("inlineCode",{parentName:"p"},"<style>")," tags when mounted in the host page. These inline stylesheets contain the CSS code required for the microfrontend."),(0,r.kt)("p",null,"When the microfrontend is unmounted it should remove all its ",(0,r.kt)("inlineCode",{parentName:"p"},"<style>")," tags."),(0,r.kt)("p",null,"Depending on whether you are using one global stylesheet or CSS modules the implementation differs a bit."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Global stylesheet")," should be inserted by the mount function of the microfrontend or its root component. This works great for ",(0,r.kt)("a",{parentName:"li",href:"https://tailwindcss.com/"},"TailwindCSS"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"CSS modules")," should be inserted and removed by the component they belong to.")),(0,r.kt)("p",null,"Example for Vite and React:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'import { App, type AppProps } from "./app";\n/**\n * 1a. Empty import of stylesheet is required for HMR during development.\n *     The file "style.css" created by production build can be ignored.\n */\nimport "./globals.css";\n/**\n * 1b. Inline CSS import is used for production build.\n */\nimport styles from "./globals.css?inline";\n\n/**\n * When mounting or updating the microfrontend.\n */\nappRoot.render(\n  <React.StrictMode>\n    <App {...props} />\n    {/**\n     * 2. Render <style> tag with imported inline CSS code only\n     *    when running in production mode.\n     */}\n    {import.meta.env.PROD && (\n      <style dangerouslySetInnerHTML={{ __html: styles }}></style>\n    )}\n  </React.StrictMode>\n);\n')),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"This project template provides a React-based implementation using TailwindCSS in the file ",(0,r.kt)("inlineCode",{parentName:"p"},"apps/service-mfe/src/main.tsx"),".")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"When using TailwindCSS set the ",(0,r.kt)("a",{parentName:"p",href:"https://tailwindcss.com/docs/configuration#prefix"},(0,r.kt)("inlineCode",{parentName:"a"},"prefix"))," option in ",(0,r.kt)("inlineCode",{parentName:"p"},"tailwind.config.js")," to a value which is unique among microfrontends. This avoids collisions with stylesheets of other microfrontends and host applications.")),(0,r.kt)("h3",{id:"external-stylesheets"},"External Stylesheets"),(0,r.kt)("p",null,"In this approach the microfrontend provides separate CSS files along with its JavaScript module. Host applications are required to load these CSS resources using ",(0,r.kt)("inlineCode",{parentName:"p"},"<link>")," tags."),(0,r.kt)("p",null,"This creates an additional contract between microfrontends and host applications. Furthermore, host applications must handle insertion and removal of the stylesheets as part of the microfrontend lifecycle."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"This project template provides a React-based implementation in the file ",(0,r.kt)("inlineCode",{parentName:"p"},"apps/host-nextjs/src/components/micro-frontend.tsx"),".")),(0,r.kt)("h3",{id:"css-in-javascript"},"CSS in JavaScript"),(0,r.kt)("p",null,"In this approach the microfrontend utilizes a CSS-in-JS library like ",(0,r.kt)("a",{parentName:"p",href:"https://emotion.sh/"},"Emotion"),", ",(0,r.kt)("a",{parentName:"p",href:"https://styled-components.com/"},"Styled Components")," or ",(0,r.kt)("a",{parentName:"p",href:"https://cssinjs.org/"},"JSS")," to apply styling to its own components."),(0,r.kt)("p",null,"The library inlines CSS automatically so it becomes part of the microfrontend JavaScript module."))}m.isMDXComponent=!0}}]);