"use strict";(self.webpackChunkmicrofrontend_template_docs=self.webpackChunkmicrofrontend_template_docs||[]).push([[91],{9613:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(9496);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(n),u=i,f=m["".concat(l,".").concat(u)]||m[u]||d[u]||o;return n?r.createElement(f,a(a({ref:t},c),{},{components:n})):r.createElement(f,a({ref:t},c))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:i,a[1]=s;for(var p=2;p<o;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2381:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var r=n(7366),i=(n(9496),n(9613));const o={description:"Sharing libraries among microfrontends",sidebar_position:6},a="Shared Libraries",s={unversionedId:"concepts/shared-libraries",id:"concepts/shared-libraries",title:"Shared Libraries",description:"Sharing libraries among microfrontends",source:"@site/docs/concepts/shared-libraries.md",sourceDirName:"concepts",slug:"/concepts/shared-libraries",permalink:"/microfrontend-template/concepts/shared-libraries",draft:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{description:"Sharing libraries among microfrontends",sidebar_position:6},sidebar:"sidebar",previous:{title:"Host Application using React",permalink:"/microfrontend-template/concepts/host-app-react"},next:{title:"Caching Modules",permalink:"/microfrontend-template/concepts/caching-modules"}},l={},p=[{value:"Motivation",id:"motivation",level:2},{value:"External Dependencies in Microfrontends",id:"external-dependencies-in-microfrontends",level:2},{value:"Import Maps in Host Applications using ES Modules",id:"import-maps-in-host-applications-using-es-modules",level:2},{value:"Global Variables in Host Applications using UMD Bundles",id:"global-variables-in-host-applications-using-umd-bundles",level:2}],c={toc:p},m="wrapper";function d(e){let{components:t,...n}=e;return(0,i.kt)(m,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"shared-libraries"},"Shared Libraries"),(0,i.kt)("h2",{id:"motivation"},"Motivation"),(0,i.kt)("p",null,"If many microfrontends are built using the same frameworks and libraries it becomes inefficient to bundle these libraries with every microfrontend. Users would end up loading the same library code multiple times which unnecessarily increases loading times of microfrontends and requires more server ressources due to increased data transfer."),(0,i.kt)("p",null,"Therefore, as soon as multiple microfrontends agree on a common tech stack their heavy libraries should be provided by host applications or some external CDN."),(0,i.kt)("h2",{id:"external-dependencies-in-microfrontends"},"External Dependencies in Microfrontends"),(0,i.kt)("p",null,"Microfrontends must declare shared libraries as external ressources in the configuration of their bundler."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://vitejs.dev/"},"Vite")," configuration must include ",(0,i.kt)("a",{parentName:"li",href:"https://vitejs.dev/config/build-options.html#build-rollupoptions"},(0,i.kt)("inlineCode",{parentName:"a"},"build.rollupOptions"))," with an ",(0,i.kt)("a",{parentName:"li",href:"https://rollupjs.org/configuration-options/#external"},(0,i.kt)("inlineCode",{parentName:"a"},"external"))," property. For UMD/IIFE bundles the names of global variables must be defined in ",(0,i.kt)("inlineCode",{parentName:"li"},"build.rollupOptions.output.globals"),". There is a good example in the ",(0,i.kt)("a",{parentName:"li",href:"https://vitejs.dev/guide/build.html#library-mode"},"Library Mode")," documentation."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://webpack.js.org/"},"Webpack")," configuration must include ",(0,i.kt)("a",{parentName:"li",href:"https://webpack.js.org/configuration/externals/"},(0,i.kt)("inlineCode",{parentName:"a"},"externals")),". Names of global variables for UMD/IIFE bundles are defined there as well.")),(0,i.kt)("p",null,"Example for Vite and React:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import react from "@vitejs/plugin-react";\nimport { resolve } from "node:path";\nimport { defineConfig } from "vite";\n\nexport default defineConfig(({ mode }) => ({\n  plugins: [react()],\n  define: { "process.env.NODE_ENV": JSON.stringify(mode) },\n  build: {\n    lib: {\n      entry: resolve(__dirname, "./src/main.tsx"),\n      name: "ServiceMFE",\n      fileName: "service-mfe",\n    },\n    rollupOptions: {\n      /**\n       * 1. Declare module specifiers of shared libraries.\n       */\n      external: ["react", "react-dom"],\n      output: {\n        /**\n         * 2. For UMD bundle specify global variable names for shared libraries.\n         *    Make sure these names match the ones exposed by the libraries!\n         */\n        globals: {\n          react: "React",\n          "react-dom": "ReactDOM",\n        },\n      },\n    },\n  },\n}));\n')),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"This project template provides a configuration in the file ",(0,i.kt)("inlineCode",{parentName:"p"},"apps/service-mfe/vite.config.ts"),".")),(0,i.kt)("h2",{id:"import-maps-in-host-applications-using-es-modules"},"Import Maps in Host Applications using ES Modules"),(0,i.kt)("p",null,"Host applications which import ES module bundles of microfrontends using ",(0,i.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/import"},"dynamic import")," must define an ",(0,i.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script/type/importmap"},"import map")," which specifies the URLs for bare module specifiers of shared libraries."),(0,i.kt)("p",null,"Example for React:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'<script type="importmap">\n  {\n    "imports": {\n      "react": "https://esm.sh/react@18.2.0",\n      "react-dom": "https://esm.sh/react-dom@18.2.0"\n    }\n  }\n<\/script>\n')),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"This project template provides a React component in the file ",(0,i.kt)("inlineCode",{parentName:"p"},"apps/host-nextjs/src/components/importmap.tsx"),".")),(0,i.kt)("h2",{id:"global-variables-in-host-applications-using-umd-bundles"},"Global Variables in Host Applications using UMD Bundles"),(0,i.kt)("p",null,"Host applications which load UMD/IIFE bundles of microfrontends must include ",(0,i.kt)("inlineCode",{parentName:"p"},"<script>")," tags to load UMD/IIFE versions of shared libraries before loading any microfrontend modules."),(0,i.kt)("p",null,"Example for React:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'<html lang="en">\n  <head>\n    <script\n      src="https://unpkg.com/react@18.2.0/umd/react.production.min.js"\n      defer\n    ><\/script>\n    <script\n      src="https://unpkg.com/react-dom@18.2.0/umd/react-dom.production.min.js"\n      defer\n    ><\/script>\n  </head>\n  <body>\n    \x3c!-- ... --\x3e\n    <script\n      src="https://my-service.my-company.com/mfe-module.umd.cjs"\n      onload="mountMFE()"\n      onerror="showError()"\n      defer\n    ><\/script>\n  </body>\n</html>\n')),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"This project template provides an implementation in the file ",(0,i.kt)("inlineCode",{parentName:"p"},"apps/host-express/views/service.ejs"),".")))}d.isMDXComponent=!0}}]);